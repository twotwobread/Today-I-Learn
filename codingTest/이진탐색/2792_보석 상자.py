# 보석의 종류와 각 보석의 갯수 그리고 학생의 수가 주어졌을때, 질투심 = 가장 많은 보석을 가진 학생의 보석 개수인데
# 질투심이 최소가 되게 보석을 나누어주는 방법을 구해라.
# 탐색을 통해서 아이들에게 보석을 나누어줄 수 있다. 그러면 최솟값을 구할 수 있을 것이다.
# 하지만 해당 문제의 입력은 N이 최대 10억, M은 최대 30만번이다. 그래서 순차 탐색으로 구현하기에 시간 초과가 날 것 같다.
# 이 경우, 파라메트릭 서치를 이용하는 것이 좋을 것이라 생각된다. 파라메트릭 서치란 최적화 문제를 결정문제로 바꾸어 해결하는 기법이다.
# 이는 원하는 조건을 만족하는 가장 알맞은 값을 찾는 문제에 주로 사용된다.
# 해당 문제에서 원하는 조건은 무엇일까? 몇개로 보석을 나누어서 학생들에게 주었을때 최솟값인지를 묻고있다.
# 그러니까 지금 이 갯수로 보석을 나누어서 학생들에게 나누어줬을때 최솟값인지 즉, 이렇게 나누어서 학생들에게 줄때 보석이 남는지?가 조건이다.
# 남으면 보석을 나누는 갯수를 늘려야하고 보석을 나누는 갯수가 남는다고 생각되면 최솟값이기 때문에 값을 저장하고 줄여줘야한다.
# 보석을 나누는 최솟값은 1일 것이고 보석을 나누는 최댓값은 보석 갯수의 총합일 것이다.
def divide(start, end):
    while start < end:
        mid = (start + end)//2
        sum = 0
        for index, j in enumerate(jewel):
            sum += (j//mid)
            if j%mid > 0:
                sum += 1
        if sum <= N:
            end = mid
        else:
            start = mid + 1
    return end

if __name__ == "__main__":
    N, M = map(int, input().split())
    jewel = [int(input()) for _ in range(M)]
    print(divide(0, sum(jewel)))
